name: npm-ci
author: "Peter Jokumsen"
description: "Install npm dependencies or use cached dependencies"

inputs:
  working_directory:
    description: "Working directory to use"
    default: "./"

runs:
  using: "composite"
  steps:
    - name: Prepare working directory
      id: working_directory
      shell: pwsh
      run: |
        # Add trailing slash to path if not present
        $input = "${{ inputs.working_directory }}"
        if ($input -notlike "*/")
        {
          Write-Output "path=${input}/" >> $env:GITHUB_OUTPUT
        }
        else
        {
          Write-Output "path=${input}" >> $env:GITHUB_OUTPUT
        }

    - name: Use node_modules from cache [npm]
      id: cache-node
      uses: actions/cache@v3
      env:
        cache-name: cache-node-modules
      with:
        # caching node_modules
        path: ${{ steps.working_directory.outputs.path }}node_modules
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-

    - shell: pwsh
      name: Install dependencies
      working-directory: ${{ steps.working_directory.outputs.path }}
      if: steps.cache-node.outputs.cache-hit != 'true'
      run: |
        npm ci

    - shell: pwsh
      name: Check path for cache
      if: steps.cache-node.outputs.cache-hit != 'true'
      run: |
        # Check if node_modules is cached
        if (Test-Path ${{ steps.working_directory.outputs.path }}node_modules)
        {
          Write-Output "node_modules found, should be cached"
        }
        else
        {
          Write-Output "::warning title=node_modules not found::node_modules not found using path '${{ steps.working_directory.outputs.path }}'"
        }
